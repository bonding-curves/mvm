# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_bathtub.ipynb.

# %% auto 0
__all__ = ['state_variables', 'params', 'psubs', 'N_timesteps', 'N_samples', 'results', 'pivot_df', 'p_bathtub', 's_bathtub']

# %% ../nbs/00_bathtub.ipynb 3
import pandas as pd
from cadCAD.tools.execution import easy_run
pd.set_option("display.width", None)
pd.set_option("display.max_columns", None)
pd.set_option("display.max_rows", None)


state_variables = {
    "x": 5,  # The level of water in the bathtub
}

params = {
    "faucet": [2],  # The inflow from the faucet
    "drain": [0.01, 0.1],  # The width of the drain
    "capacity": [100],  # The inflow from the faucet
}


def p_bathtub(params, substep, state_history, state):
    x_delta = params["faucet"] - params["drain"] * state["x"]
    return {"x_delta": x_delta}


def s_bathtub(params, substep, state_history, previous_state, policy_input):
    x = max(min(previous_state["x"] + policy_input["x_delta"], params["capacity"]), 0)
    return ("x", x)

psubs = [
    {
        "policies": {"p_bathtub": p_bathtub},
        "variables": {"x": s_bathtub},
    },
]

N_timesteps = 10

N_samples = 1

results = easy_run(
    state_variables,
    params,
    psubs,
    N_timesteps,
    N_samples,
)

# print(results)

# Make the data look a little cleaner via pivot table.
pivot_df = results.pivot_table(
    columns="run", index="timestep", values=["x", "drain", "faucet", "capacity"]
)

# After pivoting, swap and sort column levels
pivot_df.columns = pivot_df.columns.swaplevel(0, 1)
pivot_df = pivot_df.sort_index(axis=1, level=0)

print(pivot_df)
